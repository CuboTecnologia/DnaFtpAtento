@model DnaMais.Atento.Web.Models.UsuarioModel
@using DnaMais.Atento.Web.Models
@{
    ViewBag.Title = "DNA+ | Atento";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<hr />

@if (TempData["repeatUser"] != null)
{
    <p style="color:#ff0000">@TempData["repeatUser"]</p>
}

@Html.ActionLink("Voltar para Listagem de Usuários", "ListarUsuarios", "Home", null, new { @class = "btn btn-primary" })

<hr />

<h2>Criar Novo Usuário</h2>

@{
    Html.BeginForm("CriarUsuario", "Home");
    <fieldset>
        <div>
            @Html.LabelFor(model => model.Login)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.Login, new { @class = "form-control", @id = "txtLogin", @maxlength = 20 })
            <div id="msgLogin" style="color:red" class="hidden">Campo login obrigatório</div>
        </div>
        <br />
        <div class="control-label">
            @Html.LabelFor(model => model.Senha)
        </div>
        <div class="editor-field">
            @Html.PasswordFor(model => model.Senha, new { @class = "form-control", @id = "txtSenha" })
            <div id="msgSenha" style="color:red" class="hidden">Campo senha obrigatório</div>
        </div>
        <br />
        <div class="control-label">
            @Html.LabelFor(model => model.ConfirmarSenha)
        </div>
        <div class="editor-field">
            @Html.PasswordFor(model => model.ConfirmarSenha, new { @class = "form-control", @id = "txtConfirmarSenha" })
            <div id="msgConfirmarSenha" style="color:red" class="hidden">Digite sua senha novamente</div>
            <div id="msgValidarSenha" style="color:red" class="hidden">Campo "Senha" e "Confirmar Senha" estão diferentes</div>
        </div>
        <br />
        <div class="control-label">
            @Html.LabelFor(model => model.Usuario)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.Usuario, new { @class = "form-control", @id = "txtUsuario" })
            <div id="msgUsuario" style="color:red" class="hidden">Campo "Nome/Apelido" obrigatório</div>
        </div>
        <br />
        <div class="control-label">
            @Html.LabelFor(model => model.Email)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.Email, new { @class = "form-control", @id = "txtEmail" })
            <div id="msgEmail" style="color:red" class="hidden">Campo e-mail obrigatório</div>
            <div id="msgValidarEmail" class="hidden" style="color:red">Insira um e-mail válido</div>
        </div>
        <br />
        <div class="control-label">
            @Html.Label("Grupo")
        </div>
        <div class="editor-field">
            @foreach (SelectListItem item in (IEnumerable<SelectListItem>)ViewData["GrupoUsuarioCkl"])
            {
                <input type="checkbox" id="grupoUsuario@(item.Value)" name="grupoUsuario" value="@(item.Value)" /> @item.Text
                <br />
            }
            <div id="msgGrupo" style="color:red" class="hidden">Selecione, no mínimo, UM grupo</div>
        </div>
        <br />
        <div class="control-label">
            @Html.Label("Tipo de Usuário")
        </div>

        @if (Session["TipoUsuario"].ToString() == "A")
        {
            <div class="editor-field">
                @Html.RadioButtonFor(model => model.TipoUsuario, "A", new { @id = "rdbA" }) Administrativo
            </div>
        }
        <div class="editor-field">
            @Html.RadioButtonFor(model => model.TipoUsuario, "M", new { @id = "rdbM" }) Master
        </div>
        <div class="editor-field">
            @Html.RadioButtonFor(model => model.TipoUsuario, "N", new { @id = "rdbN" }) Normal
        </div>
        <div id="msgTipoUsuario" style="color:red" class="hidden">Selecione um Tipo de Usuário</div>
        <br />
    </fieldset>
    <input type="submit" id="btnNovoUsuario" value="Criar Novo Usuário" class="btn btn-primary" />


    <script>

        $(document).ready(function () {

            $("#txtLogin").focus();

            $('#btnNovoUsuario').click(function () {

                if (!$('input:checkbox').is(":checked")) {
                    $('#msgGrupo').removeClass('hidden');
                    return false;
                }
                else {
                    $('#msgGrupo').addClass('hidden');
                }

                if ($('#rdbA').is(":checked") || $('#rdbM').is(":checked") || $('#rdbN').is(":checked")) {
                    return true;
                }
                else {
                    $('#msgTipoUsuario').removeClass('hidden');
                    return false;
                }

            });

            $('#txtLogin').on('blur', function () {

                if ($('#txtLogin').val() == "") {
                    $('#msgLogin').removeClass('hidden');
                    return false;
                }
                else {
                    $('#msgLogin').addClass('hidden');
                }

            });

            $('#txtSenha').on('blur', function () {

                if ($('#txtSenha').val() == "") {
                    $('#msgSenha').removeClass('hidden');
                    return false;
                }
                else {
                    $('#msgSenha').addClass('hidden');
                }

            });

            $('#txtConfirmarSenha').on('blur', function () {
                var senha = $("#txtSenha").val();
                var confirmarSenha = $("#txtConfirmarSenha").val();

                if ($('#txtConfirmarSenha').val() == "") {
                    $('#msgConfirmarSenha').removeClass('hidden');
                    return false;
                }
                else {
                    $('#msgConfirmarSenha').addClass('hidden');
                }

                if (senha != confirmarSenha) {
                    $('#msgValidarSenha').removeClass('hidden');
                    $('#txtConfirmarSenha').focus();
                    return false;
                }
                else {
                    $('#msgValidarSenha').addClass('hidden');
                }

            });

            $('#txtUsuario').on('blur', function () {

                if ($('#txtUsuario').val() == "") {
                    $('#msgUsuario').removeClass('hidden');
                    return false;
                }
                else {
                    $('#msgUsuario').addClass('hidden');
                }

            });

            $('#txtEmail').on('blur', function () {

                var sEmail = $('#txtEmail').val();

                if ($('#txtEmail').val() == "") {
                    $('#msgEmail').removeClass('hidden');
                    return false;
                }
                else {
                    $('#msgEmail').addClass('hidden');
                }

                if (!validateEmail(sEmail)) {
                    $('#msgValidarEmail').removeClass('hidden');
                    $('#txtEmail').focus();
                    return false;
                }
                else {
                    $('#msgValidarEmail').addClass('hidden');
                }

            });

            $('#txtLogin').keyup(function () {
                var text = $(this).val();
                $(this).val(text.toUpperCase());
            });
        });

    </script>
}